//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocuTAPUploader.DocutapService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DocutapService.IDocutap")]
    public interface IDocutap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocutap/UploadContent", ReplyAction="http://tempuri.org/IDocutap/UploadContentResponse")]
        string UploadContent(string siteId, byte[] data, string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocutap/GenerateUploadLink", ReplyAction="http://tempuri.org/IDocutap/GenerateUploadLinkResponse")]
        bool GenerateUploadLink(Common.DataModels.DocutapModel docutapModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocutap/IsValidUpload", ReplyAction="http://tempuri.org/IDocutap/IsValidUploadResponse")]
        bool IsValidUpload(Common.DataModels.DocutapModel docutapModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocutap/GenerateDL", ReplyAction="http://tempuri.org/IDocutap/GenerateDLResponse")]
        bool GenerateDL(Common.DataModels.DocutapModel docutapModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocutap/GenerateMapping", ReplyAction="http://tempuri.org/IDocutap/GenerateMappingResponse")]
        bool GenerateMapping(Common.DataModels.Mappingmodel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocutap/ExpireSiteID", ReplyAction="http://tempuri.org/IDocutap/ExpireSiteIDResponse")]
        bool ExpireSiteID(string siteID, string NewDirectory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocutap/AllSiteIds", ReplyAction="http://tempuri.org/IDocutap/AllSiteIdsResponse")]
        Common.DataModels.Site[] AllSiteIds();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocutapChannel : DocuTAPUploader.DocutapService.IDocutap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocutapClient : System.ServiceModel.ClientBase<DocuTAPUploader.DocutapService.IDocutap>, DocuTAPUploader.DocutapService.IDocutap {
        
        public DocutapClient() {
        }
        
        public DocutapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocutapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocutapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocutapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string UploadContent(string siteId, byte[] data, string FileName) {
            return base.Channel.UploadContent(siteId, data, FileName);
        }
        
        public bool GenerateUploadLink(Common.DataModels.DocutapModel docutapModel) {
            return base.Channel.GenerateUploadLink(docutapModel);
        }
        
        public bool IsValidUpload(Common.DataModels.DocutapModel docutapModel) {
            return base.Channel.IsValidUpload(docutapModel);
        }
        
        public bool GenerateDL(Common.DataModels.DocutapModel docutapModel) {
            return base.Channel.GenerateDL(docutapModel);
        }
        
        public bool GenerateMapping(Common.DataModels.Mappingmodel model) {
            return base.Channel.GenerateMapping(model);
        }
        
        public bool ExpireSiteID(string siteID, string NewDirectory) {
            return base.Channel.ExpireSiteID(siteID, NewDirectory);
        }
        
        public Common.DataModels.Site[] AllSiteIds() {
            return base.Channel.AllSiteIds();
        }
    }
}
